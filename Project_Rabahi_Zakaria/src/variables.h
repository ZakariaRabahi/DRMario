#ifndef variables
#define variables
#include <pgmspace.h>

#define MIN_TILT 0.30 // for moving around
#define SPEED 1 // number of cases a blok will update with

//vairables to put game in place
bool menu = true;
bool gameover = false;
bool initPill = false;
bool NoCollision = false;
bool GameField = false;
bool loadinglevel = false;

//variables for bomb
bool bombInGame = false;
bool bomb = false;
bool bombCheck = false;
int TimeForBomb = rand() % 15 + 7; // time until you initialize the bomb

//for virus
bool TVirusInGame = false;
bool timedVirus = false;
int timedVirus_x;
int timedVirus_y;
int TimeForVirus;
int NumberOfVirus = 1; // how much virussen you need to make in a level,later levels will be based on this number
int LevelvirusCnt = NumberOfVirus; // number of virussen left in game

//for pills
int NumberOfPills = 0;
int init_x_Pill1 = 2;
int init_y_Pill1 = 0;
int init_x_Pill2 = 2;
int init_y_Pill2 = 1;
int colorPill1 = rand() % 3 + 1;
int colorPill2 = rand() % 3 + 1;
int number_of_rotations = 0;

// for matrix and game world
int width = 5;
int heigth = 10;

int MATRIXWIDTH = 6;
int MATRIXHEIGTH = 11;

int gamespeed;
int gamedelay;
int CELL = 15; // dimension of one case in matrix
int score = 0;


int menuOption = 0;



// code for virus images
// from http://www.rinkydinkelectronics.com/library.php?id=51 converter
// found at https://community.m5stack.com/topic/1251/how-to-display-picture/5
// converted from own made png files


const uint16_t imgWidth = 15;
const uint16_t imgHeight = 15;

// blue virus
const unsigned short blue_virus[0xE1] PROGMEM ={
0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x00E7, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F,   // 0x0010 (16)
0x01EF, 0x0021, 0x01EF, 0x041F, 0x041F, 0x00C6, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x014A, 0x014A, 0x041F, 0x041F, 0x0000,   // 0x0020 (32)
0x0000, 0x0000, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x0000, 0x0000, 0x041F, 0x041F, 0x01EF, 0x0000,   // 0x0030 (48)
0x01EF, 0x041F, 0x041F, 0x041F, 0x041F, 0x00C6, 0x041F, 0x041F, 0x041F, 0x014A, 0x014A, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F,   // 0x0040 (64)
0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x018C, 0x018C, 0x041F, 0x041F, 0x041F,   // 0x0050 (80)
0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x014A, 0x0000, 0x014A, 0x0021, 0x0021, 0x041F, 0x041F, 0x041F, 0x041F,   // 0x0060 (96)
0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x0021, 0x0021, 0x041F, 0x0252, 0x0021, 0x0252, 0x041F,   // 0x0070 (112)
0x041F, 0x037A, 0x0084, 0x0084, 0x037A, 0x041F, 0x041F, 0x041F, 0x018C, 0x018C, 0x041F, 0x0021, 0x0000, 0x0021, 0x041F, 0x041F,   // 0x0080 (128)
0x0129, 0x0000, 0x0000, 0x0129, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x0021, 0x0000, 0x0021, 0x041F, 0x041F, 0x0021,   // 0x0090 (144)
0x0000, 0x0000, 0x0021, 0x041F, 0x041F, 0x014A, 0x041F, 0x041F, 0x041F, 0x0231, 0x0021, 0x0231, 0x041F, 0x041F, 0x0021, 0x0000,   // 0x00A0 (160)
0x0000, 0x0021, 0x041F, 0x041F, 0x0000, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x0129, 0x0000, 0x0000,   // 0x00B0 (176)
0x0129, 0x041F, 0x041F, 0x014A, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x037A, 0x0084, 0x0084, 0x037A,   // 0x00C0 (192)
0x041F, 0x041F, 0x041F, 0x00C6, 0x00C6, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F,   // 0x00D0 (208)
0x041F, 0x041F, 0x00C6, 0x00C6, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x041F, 0x014A, 0x0000,   // 0x00E0 (224)
0x014A, };

// red virus
const unsigned short red_virus[0xE1] PROGMEM ={
0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x3800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0010 (16)
0x7800, 0x0800, 0x7800, 0xF800, 0xF800, 0x3000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x5000, 0x5000, 0xF800, 0xF800, 0x0000,   // 0x0020 (32)
0x0000, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0x0000, 0xF800, 0xF800, 0x7800, 0x0000,   // 0x0030 (48)
0x7800, 0xF800, 0xF800, 0xF800, 0xF800, 0x3000, 0xF800, 0xF800, 0xF800, 0x5000, 0x5000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0040 (64)
0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x6000, 0x6000, 0xF800, 0xF800, 0xF800,   // 0x0050 (80)
0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x5000, 0x0000, 0x5000, 0x0800, 0x0800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0060 (96)
0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0800, 0x0800, 0xF800, 0x9000, 0x0800, 0x9000, 0xF800,   // 0x0070 (112)
0xF800, 0xD000, 0x2000, 0x2000, 0xD000, 0xF800, 0xF800, 0xF800, 0x6000, 0x6000, 0xF800, 0x0800, 0x0000, 0x0800, 0xF800, 0xF800,   // 0x0080 (128)
0x4800, 0x0000, 0x0000, 0x4800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0800, 0x0000, 0x0800, 0xF800, 0xF800, 0x0800,   // 0x0090 (144)
0x0000, 0x0000, 0x0800, 0xF800, 0xF800, 0x5000, 0xF800, 0xF800, 0xF800, 0x8800, 0x0800, 0x8800, 0xF800, 0xF800, 0x0800, 0x0000,   // 0x00A0 (160)
0x0000, 0x0800, 0xF800, 0xF800, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x4800, 0x0000, 0x0000,   // 0x00B0 (176)
0x4800, 0xF800, 0xF800, 0x5000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xD000, 0x2000, 0x2000, 0xD000,   // 0x00C0 (192)
0xF800, 0xF800, 0xF800, 0x3000, 0x3000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x00D0 (208)
0xF800, 0xF800, 0x3000, 0x3000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x5000, 0x0000,   // 0x00E0 (224)
0x5000, };

// yellow virus
const unsigned short yellow_virus[0xE1] PROGMEM ={
0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x39A0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0,   // 0x0010 (16)
0x7B40, 0x0820, 0x7B40, 0xFEE0, 0xFEE0, 0x3160, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x5220, 0x5220, 0xFEE0, 0xFEE0, 0x0000,   // 0x0020 (32)
0x0000, 0x0000, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x0000, 0x0000, 0xFEE0, 0xFEE0, 0x7B40, 0x0000,   // 0x0030 (48)
0x7B40, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x3140, 0xFEE0, 0xFEE0, 0xFEE0, 0x5220, 0x5220, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0,   // 0x0040 (64)
0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x62A0, 0x62A0, 0xFEE0, 0xFEE0, 0xFEE0,   // 0x0050 (80)
0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x5220, 0x0000, 0x5220, 0x0820, 0x0820, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0,   // 0x0060 (96)
0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x0820, 0x0820, 0xFEE0, 0x93E0, 0x0820, 0x93E0, 0xFEE0,   // 0x0070 (112)
0xFEE0, 0xD5C0, 0x20E0, 0x20E0, 0xD5C0, 0xFEE0, 0xFEE0, 0xFEE0, 0x62A0, 0x62A0, 0xFEE0, 0x0840, 0x0000, 0x0840, 0xFEE0, 0xFEE0,   // 0x0080 (128)
0x49E0, 0x0000, 0x0000, 0x49E0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x0840, 0x0000, 0x0840, 0xFEE0, 0xFEE0, 0x0820,   // 0x0090 (144)
0x0000, 0x0000, 0x0820, 0xFEE0, 0xFEE0, 0x5220, 0xFEE0, 0xFEE0, 0xFEE0, 0x8BE0, 0x0820, 0x8BE0, 0xFEE0, 0xFEE0, 0x0820, 0x0000,   // 0x00A0 (160)
0x0000, 0x0820, 0xFEE0, 0xFEE0, 0x0000, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x49E0, 0x0000, 0x0000,   // 0x00B0 (176)
0x49E0, 0xFEE0, 0xFEE0, 0x5220, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xD5C0, 0x20E0, 0x20E0, 0xD5C0,   // 0x00C0 (192)
0xFEE0, 0xFEE0, 0xFEE0, 0x3140, 0x3140, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0,   // 0x00D0 (208)
0xFEE0, 0xFEE0, 0x3140, 0x3140, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0xFEE0, 0x5220, 0x0000,   // 0x00E0 (224)
0x5220, };

const unsigned short bombImg[0xE1] PROGMEM ={
0x0000, 0x0000, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x0000, 0x0000, 0x0000,   // 0x0010 (16)
0x0000, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x0000, 0x0000, 0x480D, 0x61AF,   // 0x0020 (32)
0x69D0, 0x71F1, 0x7A33, 0x8254, 0x8A75, 0x8A75, 0x8A75, 0x8A75, 0x8254, 0x7A33, 0x71F1, 0x69D0, 0x480D, 0x480D, 0x69CF, 0x71F1,   // 0x0030 (48)
0x8233, 0x8A75, 0x9296, 0x9AB7, 0x9AB7, 0x9AB7, 0x9AB7, 0x9296, 0x8A75, 0x8233, 0x71F1, 0x480D, 0x480D, 0x69D0, 0x7A33, 0x8A75,   // 0x0040 (64)
0x9296, 0x9AB7, 0xA2D8, 0xA2D8, 0xA2D8, 0xA2D8, 0x9AB7, 0x9296, 0x8A75, 0x7A33, 0x480D, 0x480D, 0xDEDB, 0xDEDB, 0xDEDB, 0x9AB7,   // 0x0050 (80)
0xDEDB, 0xDEDB, 0xA2D8, 0xA2D8, 0xDEDB, 0xA2D8, 0xDEDB, 0xDEDB, 0xDEDB, 0x480D, 0x480D, 0x7A12, 0xDEDB, 0x9AB7, 0xA2D8, 0xDEDB,   // 0x0060 (96)
0xDEDB, 0xA2F9, 0xA2F9, 0xDEDB, 0xA2D8, 0xA2D8, 0xDEDB, 0x8A75, 0x480D, 0x480D, 0x7A33, 0xDEDB, 0x9AB7, 0xA2D8, 0xDEDB, 0xA2F9,   // 0x0070 (112)
0xF7BE, 0xBB5C, 0xDEDB, 0xA2D8, 0xA2D8, 0xDEDB, 0x8A75, 0x480D, 0x480D, 0x7A33, 0xDEDB, 0x9AB7, 0xA2D8, 0xDEDB, 0xA2F9, 0xF7BE,   // 0x0080 (128)
0xBB5C, 0xDEDB, 0xA2D8, 0xA2D8, 0xDEDB, 0x8A75, 0x480D, 0x480D, 0x7A12, 0xDEDB, 0x9AB7, 0xA2D8, 0xDEDB, 0xA2F8, 0xA2F9, 0xDEDB,   // 0x0090 (144)
0xDEDB, 0xA2D8, 0xA2D8, 0xDEDB, 0x8A75, 0x480D, 0x480D, 0x7211, 0x8254, 0x9296, 0x9AB7, 0xA2D8, 0xA2D8, 0xA2D8, 0xA2D8, 0xA2D8,   // 0x00A0 (160)
0xA2D8, 0x9AB7, 0x9296, 0x8254, 0x480D, 0x480D, 0x69D0, 0x7A33, 0x8A75, 0x9296, 0x9AB7, 0xA2D8, 0xA2D8, 0xA2D8, 0xA2D8, 0x9AB7,   // 0x00B0 (176)
0x9296, 0x8A75, 0x7A33, 0x480D, 0x480D, 0x69CF, 0x71F1, 0x8233, 0x8A75, 0x9296, 0x9AB7, 0x9AB7, 0x9AB7, 0x9AB7, 0x9296, 0x8A75,   // 0x00C0 (192)
0x8233, 0x71F1, 0x480D, 0x0000, 0x0000, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D,   // 0x00D0 (208)
0x0000, 0x0000, 0x0000, 0x0000, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x480D, 0x0000,   // 0x00E0 (224)
0x0000, };

const unsigned short redTimed_virus[0xE1] PROGMEM ={
0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0010 (16)
0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0020 (32)
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000,   // 0x0030 (48)
0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0040 (64)
0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0050 (80)
0x0000, 0xF800, 0xF800, 0xF800, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0060 (96)
0x0000, 0xF800, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x0070 (112)
0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0xF800,   // 0x0080 (128)
0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0xF800, 0xF800, 0xF800,   // 0x0090 (144)
0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x00A0 (160)
0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x00B0 (176)
0x0000, 0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x00C0 (192)
0x0000, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x00D0 (208)
0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,   // 0x00E0 (224)
0xF800, };


const unsigned short yellowTimed_virus[0xE1] PROGMEM ={
0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x0010 (16)
0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x0020 (32)
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000,   // 0x0030 (48)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x0040 (64)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x0050 (80)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x0060 (96)
0x0000, 0xE5C2, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x0070 (112)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0xE5C2,   // 0x0080 (128)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x0090 (144)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x00A0 (160)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x00B0 (176)
0x0000, 0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x00C0 (192)
0x0000, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x00D0 (208)
0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2, 0xE5C2,   // 0x00E0 (224)
0xE5C2, };


const unsigned short blueTimed_virus[0xE1] PROGMEM ={
0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x0010 (16)
0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x0020 (32)
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000,   // 0x0030 (48)
0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x0040 (64)
0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x0050 (80)
0x0000, 0x037F, 0x037F, 0x037F, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x0060 (96)
0x0000, 0x037F, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x0070 (112)
0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000, 0x037F,   // 0x0080 (128)
0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000, 0x037F, 0x037F, 0x037F,   // 0x0090 (144)
0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x00A0 (160)
0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x00B0 (176)
0x0000, 0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x00C0 (192)
0x0000, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x00D0 (208)
0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F, 0x037F,   // 0x00E0 (224)
0x037F, };




#endif /* variables */